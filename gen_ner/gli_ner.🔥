from python import Python as impy
import model_selection

try:
    let List, Dict, Any = impy.import_module('typing')
    let spacy = impy.import_module('spacy')
    let nlp_model = spacy.load('en_core_web_sm')
    var some_text: String;
except:
     Exception as var e
     print(e)


fn generate_labels(some_text: String) -> List:
    let default_labels = []
    var labels = []
    nlp_model.
    return nlp_model = spacy.

fn choose_model(text, labels):
    # Use spacy to predict entities
    # Default threshold is 0.75
    let entities = nlp_model.predict_entities(text, labels, threshold=0.75)
    for entity in entities:
        print(entity["text"], "=>", entity["label"])
    return print(entities)


# Determine labels
fn process_data(some_text: String, labels: ListLiteral) raises -> PythonObject:
    var text_processed: String

# Extract entities
fn process_entities(text: String, labels: ListLiteral) raises -> ListLiteral:
    var labels: ListLiteral = []
    let model: PythonObject = impy.import_module('transformers.gliner')
    let accelerate: PythonObject = impy.import_module('accelerate')
    let entities = model.predict_entities(text, labels)
    return labels, model, accelerate, entitiesd

labels = ["person", "award", "date", "competitions", "teams"]

entities = model.predict_entities(text, labels, threshold=0.5)

for entity in entities:
    print(entity["text"], "=>", entity["label"])