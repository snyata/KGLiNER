# Extracting labels from structured text
from python import Python as impy

# Assuming Portkey and necessary libraries are accessible via Python interop
try:
    let os = impy.import_module("os")
    let Portkey = impy.import_module("portkeyai").Portkey
except: 
    Exception as e
    _logger = impy.import_module("loguru")
    _logger.error(e)
struct PortkeyClient:
    var api_key: String
    var virtual_key: String
    var client: PythonObject


    # Initialize the Portkey client within the constructor
    fn __init__(inout self, api_key: String):
        self.api_key = api_key
        self.virtual_key = os.getenv("OPENAI_API_KEY")
        try:
            self.client = Portkey(api_key=self.api_key, virtual_key=self.virtual_key)
        except Exception as e:
            print("Failed to initialize Portkey client: ", e)

    # Function to generate a text completion using Portkey
    fn get_text_completion(self, prompt: String, model: String) -> PythonObject:
        try:
            let completion = self.client.completions.create(prompt=prompt, model=model)
            return completion
        except Exception as e:
            print("Failed to generate text completion: ", e)
            return None

# Usage example
fn gen_labels(prompt: prompt_in, ) raises {
    let pk_api_key = os.getenv("PORTKEY_API_KEY")
    let pk_client = PortkeyClient(api_key=os.getenv(pk_api_key))

    let prompt = prompt_in
    let model = "gpt-3.5-turbo-instruct"
    let response = pk_client.get_text_completion(prompt=prompt, model=model)

    if response != None {
        print("Completion: ", response)
    }
}

